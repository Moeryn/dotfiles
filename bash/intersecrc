# Intersec specific helpers

export PATH=/srv/tools/bin/:$PATH
export PATH=/usr/lib/ccache/:$PATH

# {{{ Functions
# {{{ Make coverage website

function makecov()
{
    local path=".build-coverage-wasmunds/"

    lcov -c --directory $path -wasmunds/ -b . -o $path/test.info               \
         --ignore-errors source,gcov --no-external
    lcov --remove $path/test.info "*.iop.h" -o $path/test.info
    lcov --remove $path/test.info "*.iop.c" -o $path/test.info
    lcov --remove $path/test.info "lib-common/iop/*" -o $path/test.info
    lcov --remove $path/test.info "lib-common/compat/sys/*" -o $path/test.info
    lcov --remove $path/test.info "qrrd/iop/*" -o $path/test.info
    lcov --remove $path/test.info "js/*" -o $path/test.info

    genhtml --function-coverage --branch-coverage --highlight                  \
            --legend $path/test.info --output-directory /var/www/coverage

    if [ $? -ne 0 ]; then
        return
    fi
    echo -e "coverage generation complete checkout /var/www/coverage"
    while true; do
        if [[ $ZSH_NAME == "zsh" ]]; then
            read "yn?Open in google-chrome the coverage? y/n"
        else
            read -p "Open in google-chrome the coverage? y/n" yn
        fi
        case $yn in
            [Yy]* ) google-chrome http://127.0.0.1/coverage; break;;
            [Nn]* ) return;;
            * ) echo "Please answer y or n.";;
        esac
    done
}

# }}}

if [[ $ZSH_NAME != "zsh" ]]; then
    export -f makecov
fi

# }}}

# Alias
alias make='make NOCHECK=1'
alias makef='make P=debug NOCHECK=1'
alias makefa='make P=asan NOCHECK=1'
alias zpf='rm -rf prefix/ ; mkdir prefix ; ./utils/setup.sh ; ./zpf-master -i1'
alias zpf-sa='PLATFORM_MASTER_PID=$(pidof zpf-master) PLATFORM_CTLSOCK=@/var/run/zpf-master.ctl $*'
alias zpf-py='rm -rf prefix/* ; ./utils/setup.sh ; ipython -i zpf-init.py'

# vim: syn=sh
